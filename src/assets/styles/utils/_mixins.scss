//--------------------
// SCSS MIXINS
//--------------------

@mixin mq($name) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin mq-down($name) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (max-width: ($min - 1px)) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

@mixin sr-only-focusable {
    &:active,
    &:focus {
        position: static;
        width: auto;
        height: auto;
        overflow: visible;
        clip: auto;
        white-space: normal;
    }
}

@mixin hyphenate() {
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
}

@mixin ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin center-block {
    margin-left: auto;
    margin-right: auto;
}

@mixin coverall() {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
}

@mixin scrollable() {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}

@mixin button-reset() {
    border: 0;
    padding: 0;
    background-color: transparent;
    -webkit-appearance: none;
}

/*********************************************************
## CSS Grid auto layout with Flexbox fallback for IE
*********************************************************/
// You can generate similar code with this handy tool https://shadeed.github.io/grid-to-flex/
@mixin gridAuto() {
    display: flex;
    flex-wrap: wrap;
    margin-left: -2em;

    // target all direct children (grid items)
    > * {
        margin-bottom: 2em;
        margin-left: 2em;
    }

    @media (min-width: 600px) {
        > * {
            width: calc((99% / #{2}) - 2em);
            flex: 0 0 calc((99% / #{2}) - 2em);
        }
    }

    @media (min-width: 900px) {
        > * {
            width: calc((99% / #{3}) - 2em);
            flex: 0 0 calc((99% / #{3}) - 2em);
        }
    }

    // Override or undo all the flexbox stuff.
    // *note that IE does support some of CSS Grid but doesn't support the @supports function,
    // so this does what we need!
    @supports (display: grid) {
        display: grid;
        grid-gap: 2em;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        margin-left: 0;

        > * {
            width: auto;
            margin-left: 0;
            margin-bottom: 0;
        }
    }
}
// Now just add this mixin to your container element for the grid:
// .wrapper {
//   @include gridAuto();
// }
